{"version":3,"file":"index.0504c8a7.js","sources":["../../vite/dynamic-import-polyfill","../../src/Components/SpreadRank.tsx","../../src/modules/PricesSubscriber.ts","../../src/modules/SpreadsProvider.ts","../../src/App.tsx","../../src/modules/util.ts","../../src/main.tsx"],"sourcesContent":["const p = function polyfill(modulePath = '.', importFunctionName = '__import__') {\n    try {\n        self[importFunctionName] = new Function('u', `return import(u)`);\n    }\n    catch (error) {\n        const baseURL = new URL(modulePath, location);\n        const cleanup = (script) => {\n            URL.revokeObjectURL(script.src);\n            script.remove();\n        };\n        self[importFunctionName] = (url) => new Promise((resolve, reject) => {\n            const absURL = new URL(url, baseURL);\n            // If the module has already been imported, resolve immediately.\n            if (self[importFunctionName].moduleMap[absURL]) {\n                return resolve(self[importFunctionName].moduleMap[absURL]);\n            }\n            const moduleBlob = new Blob([\n                `import * as m from '${absURL}';`,\n                `${importFunctionName}.moduleMap['${absURL}']=m;`\n            ], { type: 'text/javascript' });\n            const script = Object.assign(document.createElement('script'), {\n                type: 'module',\n                src: URL.createObjectURL(moduleBlob),\n                onerror() {\n                    reject(new Error(`Failed to import: ${url}`));\n                    cleanup(script);\n                },\n                onload() {\n                    resolve(self[importFunctionName].moduleMap[absURL]);\n                    cleanup(script);\n                }\n            });\n            document.head.appendChild(script);\n        });\n        self[importFunctionName].moduleMap = {};\n    }\n};__VITE_IS_MODERN__&&p(\"/trading-panel/assets/\");","import React, { useEffect, useReducer } from 'react'\nimport { Table } from 'antd';\nimport './SpreadRank.css'\nimport { ColumnsType } from 'antd/lib/table';\nimport { observer } from 'mobx-react';\nimport SpreadProvider from '../modules/SpreadsProvider';\nimport moment from 'moment';\n\n/**\n * 计算距离交割日的天数\n *\n * @param {string} futureDate 交割日，如 '210925'\n * @returns {number} 天数\n */\n function getDayDiff (futureDate: string): number {\n  const today = moment();\n  const future = moment('20' + futureDate);\n  return future.diff(today, 'days')\n}\n\nfunction useForceUpdate() {\n  const [_, dispatch] = useReducer(x => x + 1, 0);\n  return dispatch;\n}\n\nconst highlightSymbols: string[] = [\n  // 'ETH'\n]\n\ninterface SpreadTableItem {\n  symbol: string\n  currentPrice: string\n  futurePrice: string\n  diffRate: string\n}\n\nconst shouldBeHighlight = (symbol: string): boolean => !!highlightSymbols.find(highlightSymbol => symbol.startsWith(highlightSymbol));\n\nexport default observer(function SpreadRank ({ spreadsProvider }: { spreadsProvider: SpreadProvider }) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    setInterval(forceUpdate, 1000)\n  }, [])\n\n  if (spreadsProvider.spreadRank.length === 0) {\n    return <div>loading...</div>\n  }\n\n  const tableColumns: ColumnsType<SpreadTableItem> = [\n    {\n      title: 'Symbol',\n      dataIndex: 'symbol',\n      key: 'symbol',\n      align: 'right',\n      width: 1\n    },\n    {\n      title: 'Spot',\n      dataIndex: 'currentPrice',\n      key: 'currentPrice',\n      align: 'right',\n    },\n    {\n      title: 'Future',\n      dataIndex: 'futurePrice',\n      key: 'futurePrice',\n      align: 'right',\n    },\n    {\n      title: 'Diff Rate',\n      dataIndex: 'diffRate',\n      key: 'diffRate',\n      align: 'right',\n    },\n    {\n      title: 'APY',\n      dataIndex: 'diffRateAnnual',\n      key: 'diffRateAnnual',\n      align: 'right',\n    },\n  ]\n\n  const tables = Array.from(spreadsProvider.groupedSpreadRank.entries()).map(([deliveryDate, rank]) => {\n    const remainingDays = getDayDiff(deliveryDate)\n    const tableDataSource: SpreadTableItem[] = rank.map(({ symbol, currentPrice, futurePrice, diffRate }) => ({\n      symbol: symbol.toUpperCase(),\n      currentPrice: currentPrice.toFixed(3),\n      futurePrice: futurePrice.toFixed(3),\n      diffRate: `${(diffRate * 100).toFixed(2)}%`,\n      diffRateAnnual: `${(diffRate / (remainingDays / 365) * 100).toFixed(2)}%`,\n    }))\n\n    return <Table\n      key={deliveryDate}\n      style={{ width: 600, marginBottom: 30 }}\n      pagination={false}\n      size=\"small\"\n      title={() => `${deliveryDate} ( ~${remainingDays}d. / ${(remainingDays / 30).toFixed(1)}m. )`}\n      columns={tableColumns}\n      dataSource={tableDataSource}\n      rowKey=\"symbol\"\n      rowClassName={spread => shouldBeHighlight(spread.symbol) ? 'highlight' : ''}\n    />\n  })\n\n  return <>{...tables}</>\n})\n","import axios from 'axios'\nimport { isFutureSymbol } from './util'\nimport { Subject } from 'rxjs';\n\nenum TickerType {\n  CURRENT = 'CURRENT',\n  FUTURE = 'FUTURE',\n}\n\nexport interface Ticker {\n  symbol: string\n  ps: string\n  price: string\n  time: number\n}\n\n\ninterface BinanceCurrentAggTradePayload {\n  e: string // 事件类型，例：\"aggTrade\",\n  E: number // 事件时间，例：123456789,\n  s: string // 交易对，例：\"BNBBTC\",\n  a: number // 归集交易ID，例：12345,\n  p: string // 成交价格，例：\"0.001\",\n  q: string // 成交笔数，例：\"100\",\n  f: number // 被归集的首个交易ID，例：100,\n  l: number // 被归集的末次交易ID，例：105,\n  T: number // 成交时间，例：123456785,\n  m: boolean // 买方是否是做市方。如true，则此次成交是一个主动卖出单，否则是一个主动买入单，例：true,\n  M: boolean // 请忽略该字段，例：true\n}\n\ninterface BinanceFutureAggTradePayload {\n  e: string  // 事件类型，例：\"aggTrade\"\n  E: number  // 事件时间，例：1591261134288\n  a: number  // 归集成交ID，例：424951\n  s: string  // 交易对，例：\"BTCUSD_200626\"\n  p: string  // 成交价格，例：\"9643.5\"\n  q: string  // 成交量，例：\"2\"\n  f: number  // 被归集的首个交易ID，例：606073\n  l: number  // 被归集的末次交易ID，例：606073\n  T: number  // 成交时间，例：1591261134199\n  m: boolean // 买方是否是做市方。如true,则此次成交是一个主动卖出单,否则是一个主动买入单，例： false\n}\n\ninterface BinanceResultNullPayload {\n  result: null,\n  id: number\n}\n\nexport interface PriceVariation {\n  symbol: string\n  price: number\n  tradeTime: number\n  eventTime: number\n}\n\nexport default class PricesSubscriber\n {\n  currentWsClient = new WebSocket('wss://stream.binance.com/ws')\n  futureWsClient = new WebSocket('wss://dstream.binance.com/ws')\n\n  currentPrice$: Subject<PriceVariation>\n  futurePrice$: Subject<PriceVariation>\n\n  readys = 0\n  requestId = 0\n\n  constructor () {\n    this.currentPrice$ = this._initSubject(TickerType.CURRENT, this.currentWsClient);\n    this.futurePrice$ = this._initSubject(TickerType.FUTURE, this.futureWsClient);\n  }\n\n  private _initSubject (type: TickerType, wsClient: WebSocket): Subject<PriceVariation> {\n    const subject = new Subject<PriceVariation>()\n\n    wsClient.addEventListener('open', () => {\n      this.readys++\n      if (this.readys === 2) { this.generateAllFCPairs() }\n    })\n    wsClient.addEventListener('error', (err) => subject.error(err))\n    wsClient.addEventListener('close', () => subject.complete())\n    if (type === TickerType.CURRENT) {\n      wsClient.addEventListener('message', (msg) => {\n        const parsed = JSON.parse(msg.data)\n        if (parsed.result === null) { return; }\n\n        const payload: BinanceCurrentAggTradePayload = parsed;\n\n        const priceVariation: PriceVariation = {\n          symbol: payload.s.toLowerCase(),\n          price: parseFloat(payload.p),\n          tradeTime: payload.T,\n          eventTime: payload.E,\n        }\n\n        // console.debug(`[${type}] socket: message, priceVariation:`, priceVariation)\n        subject.next(priceVariation)\n      })\n\n    }\n    else if (type === TickerType.FUTURE) {\n      wsClient.addEventListener('message', (msg) => {\n        const parsed = JSON.parse(msg.data)\n        if (parsed.result === null) { return; }\n\n        const payload: BinanceFutureAggTradePayload = parsed;\n\n        const priceVariation: PriceVariation = {\n          symbol: payload.s.toLowerCase(),\n          price: parseFloat(payload.p),\n          tradeTime: payload.T,\n          eventTime: payload.E,\n        }\n\n        // console.debug(`[${type}] socket: message, priceVariation:`, priceVariation)\n        subject.next(priceVariation)\n      })\n    }\n\n    return subject;\n  }\n\n  private async _fetchAllSupportedSymbols (): Promise<Ticker[]> {\n    const res = await axios.get('https://dapi.binance.com/dapi/v1/ticker/price')\n    return res.data.filter((item: Ticker) => isFutureSymbol(item.symbol));\n  }\n\n  private _subscribeTicker (type: TickerType, symbols: string[]) {\n    const wsClient = type === TickerType.FUTURE ? this.futureWsClient : this.currentWsClient;\n    const id = this.requestId++;\n    const payload = {\n      method: 'SUBSCRIBE',\n      params: symbols,\n      id,\n    };\n    console.log('[subscribeTicker] type:', type, 'payload:', payload)\n    wsClient.send(JSON.stringify(payload))\n  }\n\n  async generateAllFCPairs () {\n    const futureTicker = await this._fetchAllSupportedSymbols()\n    const symbols = futureTicker.map(ticker => ({\n      currentSymbol: `${ticker.ps}T`.toLowerCase(),\n      futureSymbol: ticker.symbol.toLowerCase()\n    }))\n\n    console.log(symbols)\n\n    this._subscribeTicker(TickerType.CURRENT, symbols.map(sybl => sybl.currentSymbol + '@aggTrade'))\n    this._subscribeTicker(TickerType.FUTURE, symbols.map(sybl => sybl.futureSymbol + '@aggTrade'))\n  }\n}\n","import produce from 'immer'\nimport { reverse, sortBy } from 'lodash'\nimport { observable } from 'mobx'\nimport { action, computed } from 'mobx'\nimport PriceSubscriber from './PricesSubscriber'\n\nexport enum ACTION_NAME {\n  UPDATE_CURRENT_PRICE = 'UPDATE_CURRENT_PRICE',\n  UPDATE_FUTURE_PRICE = 'UPDATE_FUTURE_PRICE',\n}\n\nexport class Spread {\n  symbol: string // 采用期货 symbol，如 adausd_210924\n  _currentPrice: number = 0\n  _futurePrice: number = 0\n  diffRate: number = 0\n\n  constructor (symbol: string) {\n    this.symbol = symbol\n  }\n\n  get currentPrice (): number { return this._currentPrice }\n  set currentPrice (newPrice: number) {\n    this._currentPrice = newPrice\n    this.diffRate = (this._futurePrice - this._currentPrice) / this._currentPrice\n  }\n\n  get futurePrice (): number { return this._futurePrice }\n  set futurePrice (newPrice: number) {\n    this._futurePrice = newPrice\n    this.diffRate = (this._futurePrice - this._currentPrice) / this._currentPrice\n  }\n}\n\nexport default class SpreadProvider {\n  @observable spreads: Map<string, Spread> = new Map\n  @computed get spreadRank(): Spread[] {\n    return reverse(sortBy(Array.from(this.spreads.values()).filter(s => s.diffRate !== Infinity), 'diffRate'))\n  }\n  @computed get groupedSpreadRank(): Map<string, Spread[]> {\n    return this.spreadRank.reduce((rst, spread) => {\n      const deliveryDateStr = spread.symbol.split('_')[1]\n      if (!rst.get(deliveryDateStr)) { rst.set(deliveryDateStr, []) }\n\n      rst.get(deliveryDateStr)!.push(spread)\n\n      return rst\n    }, new Map<string, Spread[]>())\n  }\n\n  constructor (priceSubscriber: PriceSubscriber) {\n    const updateCurrentPrice = this.updateCurrentPrice.bind(this)\n    priceSubscriber.currentPrice$.subscribe({\n      next({ symbol, price }) {\n        updateCurrentPrice(symbol, price)\n      }\n    })\n    const updateFuturePrice = this.updateFuturePrice.bind(this)\n    priceSubscriber.futurePrice$.subscribe({\n      next({ symbol, price }) {\n        updateFuturePrice(symbol, price)\n      }\n    })\n  }\n\n  @action updateCurrentPrice (symbol: string, price: number) {\n    const getFutureSymbolPrefix = (symbol: string) => symbol.slice(0, -1)\n    const futureSymbolPrefix = getFutureSymbolPrefix(symbol)\n    const futureSymbols = Array.from(this.spreads.keys())\n      .filter((futureSymbol) => futureSymbol.startsWith(futureSymbolPrefix))\n\n    futureSymbols.forEach(sybl => {\n      this.spreads.get(sybl)!.currentPrice = price\n    })\n  }\n\n  @action updateFuturePrice (symbol: string, price: number) {\n    if (!this.spreads.has(symbol)) { this.spreads.set(symbol, new Spread(symbol)) }\n    this.spreads.get(symbol)!.futurePrice = price\n  }\n}\n","import React, { useEffect, useState } from 'react'\nimport './App.css'\nimport SpreadRank from './Components/SpreadRank'\nimport PricesSubscriber from './modules/PricesSubscriber'\nimport SpreadsProvider from './modules/SpreadsProvider'\n\nconst pricesSubscriber = new PricesSubscriber()\nconst spreadsProvider = new SpreadsProvider(pricesSubscriber)\n\nconst REFRESH_INTERVAL = 3600; // 1 hour\nconst formatTime = (time: number) => (time < 10 ? `0${time}` : time);\n\nfunction App() {\n  const [countdown, setCountdown] = useState(REFRESH_INTERVAL)\n\n  useEffect(() => {\n    setInterval(() => {\n      setCountdown((prevCountdown) => {\n        if (prevCountdown <= 1) {\n          window.location.reload(); // 刷新页面\n        }\n        return prevCountdown - 1;\n      });\n    }, 1000)\n  }, [])\n\n  return (<>\n    <SpreadRank spreadsProvider={spreadsProvider} />\n    <footer>\n      <p>Binance trading fee(maker/taker): spot 0.1% / 0.1%, future 0.02% / 0.05%</p>\n      <p >Auto refresh in {formatTime(Math.floor(countdown / 60))}:{formatTime(countdown % 60)}</p>\n    </footer>\n  </>)\n}\n\nexport default App\n","// export function extractSymbol\nimport { isNumber } from 'lodash'\n\nexport function isFutureSymbol (symbol: string): boolean {\n  const splited = symbol.split('_')\n  if (splited.length !== 2) { return false }\n\n  const deliveryDate = parseInt(splited[1])\n  if (Number.isNaN(deliveryDate) || !isNumber(deliveryDate)) { return false }\n\n  return true\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport 'antd/dist/antd.css'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"names":["modulePath","importFunctionName","Function","error","baseURL","URL","location","cleanup","script","revokeObjectURL","src","remove","url","Promise","resolve","reject","absURL","self","moduleMap","moduleBlob","Blob","type","Object","assign","document","createElement","createObjectURL","[object Object]","Error","head","appendChild","p","highlightSymbols","TickerType","TickerType2","observer","spreadsProvider","forceUpdate","_","dispatch","useReducer","x","useForceUpdate","spreadsProvider2","spreadRank","length","tableColumns","title","dataIndex","key","align","width","tables","Array","from","groupedSpreadRank","entries","map","deliveryDate","rank","remainingDays","futureDate","today","moment","diff","getDayDiff","tableDataSource","symbol","currentPrice","futurePrice","diffRate","toUpperCase","toFixed","diffRateAnnual","Table","style","marginBottom","pagination","size","columns","dataSource","rowKey","rowClassName","shouldBeHighlight","spread","find","startsWith","highlightSymbol","ACTION_NAME","ACTION_NAME2","this","_currentPrice","newPrice","_futurePrice","priceSubscriber","Map","updateCurrentPrice","bind","currentPrice$","subscribe","price","updateFuturePrice","futurePrice$","reverse","sortBy","spreads","values","filter","s","Infinity","reduce","rst","deliveryDateStr","split","get","set","push","futureSymbolPrefix","slice","keys","futureSymbol","forEach","sybl","has","Spread","__decorate","observable","SpreadProvider","prototype","computed","action","SpreadsProvider","WebSocket","_initSubject","CURRENT","currentWsClient","FUTURE","futureWsClient","wsClient","subject","Subject","addEventListener","readys","generateAllFCPairs","err","complete","msg","parsed","JSON","parse","data","result","payload","priceVariation","toLowerCase","parseFloat","tradeTime","T","eventTime","E","next","axios","item","splited","parseInt","Number","isNaN","isNumber","isFutureSymbol","symbols","method","params","id","requestId","log","send","stringify","_fetchAllSupportedSymbols","currentSymbol","ticker","ps","_subscribeTicker","formatTime","time","countdown","setCountdown","useState","prevCountdown","reload","SpreadRank","Math","floor","ReactDOM","render","React","StrictMode","App","getElementById"],"mappings":"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"}